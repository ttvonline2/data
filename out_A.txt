# <<< i n c l u d e >>> cách < <<< b i t s >>> / <<< s t d c >>> + + . h >
<<< u s i n g >>> cách <<< n a m e s p a c e >>> cách <<< s t d >>> ;
<<< c o n s t >>> cách long cách long cách <<< M O D >>> = <<< 1 0 0 0 0 0 0 0 0 7 L L >>> ;
<<< u s i n g >>> cách <<< M a t >>> = vector < vector < long cách long > > ;
<<< M a t >>> cách <<< m u l t >>> ( <<< c o n s t >>> cách <<< M a t >>> & a , <<< c o n s t >>> cách <<< M a t >>> & b ) {
4 cách <<< i n t >>> cách n = a . <<< s i z e >>> ( ) ;
4 cách <<< M a t >>> cách c ( n , vector < long cách long > ( n , 0 ) ) ;
4 cách <<< f o r >>> ( <<< i n t >>> cách i = 0 ; i < n ; i + + )
8 cách <<< f o r >>> ( <<< i n t >>> cách k = 0 ; k < n ; k + + ) cách <<< i f >>> ( a [ i ] [ k ] )
12 cách <<< f o r >>> ( <<< i n t >>> cách j = 0 ; j < n ; j + + )
16 cách c [ i ] [ j ] = ( c [ i ] [ j ] + a [ i ] [ k ] * b [ k ] [ j ] ) % <<< M O D >>> ;
4 cách <<< r e t u r n >>> cách c ;
}
vector < long cách long > cách <<< m u l t >>> ( <<< c o n s t >>> cách vector < long cách long > & v , <<< c o n s t >>> cách <<< M a t >>> & m ) {
4 cách <<< i n t >>> cách n = v . <<< s i z e >>> ( ) ;
4 cách vector < long cách long > cách <<< r e s >>> ( n , 0 ) ;
4 cách <<< f o r >>> ( <<< i n t >>> cách i = 0 ; i < n ; i + + ) cách <<< i f >>> ( v [ i ] )
8 cách <<< f o r >>> ( <<< i n t >>> cách j = 0 ; j < n ; j + + )
12 cách <<< r e s >>> [ j ] = ( <<< r e s >>> [ j ] + v [ i ] * m [ i ] [ j ] ) % <<< M O D >>> ;
4 cách <<< r e t u r n >>> cách <<< r e s >>> ;
}
<<< M a t >>> cách <<< b u i l d >>> ( <<< i n t >>> cách R , <<< c o n s t >>> cách vector < <<< i n t >>> > & <<< o b s >>> ) {
4 cách vector < <<< i n t >>> > cách <<< s e g L >>> ( R + 1 ) , <<< s e g R >>> ( R + 1 ) ;
4 cách vector < <<< c h a r >>> > cách <<< b a d >>> ( R + 1 , 0 ) ;
4 cách <<< f o r >>> ( <<< i n t >>> cách x : <<< o b s >>> ) cách <<< b a d >>> [ x ] = 1 ;
4 cách <<< i n t >>> cách l = 1 ;
4 cách <<< w h i l e >>> ( l < = R ) {
8 cách <<< w h i l e >>> ( l < = R & & <<< b a d >>> [ l ] ) cách l + + ;
8 cách <<< i f >>> ( l > R ) cách <<< b r e a k >>> ;
8 cách <<< i n t >>> cách r = l ;
8 cách <<< w h i l e >>> ( r + 1 < = R & & ! <<< b a d >>> [ r + 1 ] ) cách r + + ;
8 cách <<< f o r >>> ( <<< i n t >>> cách i = l ; i < = r ; i + + ) cách <<< s e g L >>> [ i ] = l , <<< s e g R >>> [ i ] = r ;
8 cách l = r + 1 ;
4 cách }
4 cách <<< M a t >>> cách T ( R , vector < long cách long > ( R , 0 ) ) ;
4 cách <<< f o r >>> ( <<< i n t >>> cách a = 1 ; a < = R ; a + + ) cách <<< i f >>> ( ! <<< b a d >>> [ a ] )
8 cách <<< f o r >>> ( <<< i n t >>> cách b = 1 ; b < = R ; b + + ) cách <<< i f >>> ( ! <<< b a d >>> [ b ] & & <<< s e g L >>> [ a ] = = <<< s e g L >>> [ b ] ) {
12 cách long cách long cách <<< l o w >>> = <<< s e g L >>> [ a ] , <<< h i g h >>> = <<< s e g R >>> [ a ] ;
12 cách long cách long cách <<< w a y s >>> = ( min ( a , b ) - <<< l o w >>> + 1 ) * ( <<< h i g h >>> - <<< m a x >>> ( a , b ) + 1 ) % <<< M O D >>> ;
12 cách T [ a - 1 ] [ b - 1 ] = <<< w a y s >>> ;
8 cách }
4 cách <<< r e t u r n >>> cách T ;
}
<<< i n t >>> cách <<< m a i n >>> ( ) {
4 cách <<< i o s >>> : : <<< s y n c _ w i t h _ s t d i o >>> ( <<< f a l s e >>> ) ;
4 cách <<< c i n >>> . <<< t i e >>> ( <<< n u l l p t r >>> ) ;
4 cách <<< i n t >>> cách <<< T c s >>> ; cách <<< i f >>> ( ! ( <<< c i n >>> > > <<< T c s >>> ) ) cách <<< r e t u r n >>> cách 0 ;
4 cách <<< w h i l e >>> ( <<< T c s >>> - - ) {
8 cách <<< i n t >>> cách R , C , N , I ; cách <<< c i n >>> > > R > > C > > N > > I ;
8 cách <<< u n o r d e r e d _ m a p >>> < <<< i n t >>> , vector < <<< i n t >>> > > cách <<< m p >>> ;
8 cách <<< f o r >>> ( <<< i n t >>> cách i = 0 ; i < N ; i + + ) {
12 cách <<< i n t >>> cách x , y ; <<< c i n >>> > > x > > y ;
12 cách <<< m p >>> [ y ] . <<< p u s h _ b a c k >>> ( x ) ;
8 cách }
8 cách <<< M a t >>> cách <<< T e m p t y >>> = <<< b u i l d >>> ( R , { } ) ;
8 cách vector < <<< M a t >>> > cách <<< p o w 2 >>> ( 21 ) ;
8 cách <<< p o w 2 >>> [ 0 ] = <<< T e m p t y >>> ;
8 cách <<< f o r >>> ( <<< i n t >>> cách k = 1 ; k < = 20 ; k + + ) cách <<< p o w 2 >>> [ k ] = <<< m u l t >>> ( <<< p o w 2 >>> [ k - 1 ] , <<< p o w 2 >>> [ k - 1 ] ) ;
8 cách vector < long cách long > cách <<< d p >>> ( R , 0 ) ; cách <<< d p >>> [ I - 1 ] = 1 ;
8 cách vector < <<< i n t >>> > cách <<< c o l s >>> ;
8 cách <<< f o r >>> ( <<< a u t o >>> cách & p : <<< m p >>> ) cách <<< c o l s >>> . <<< p u s h _ b a c k >>> ( p . <<< f i r s t >>> ) ;
8 cách <<< s o r t >>> ( <<< c o l s >>> . <<< b e g i n >>> ( ) , <<< c o l s >>> . <<< e n d >>> ( ) ) ;
8 cách <<< i n t >>> cách cur = 1 ;
8 cách <<< a u t o >>> cách <<< a p p l y _ g a p >>> = [ & ] ( long cách long cách len ) {
12 cách <<< f o r >>> ( <<< i n t >>> cách k = 0 ; k < = 20 ; k + + ) cách <<< i f >>> ( len & ( <<< 1 L L >>> < < k ) ) cách <<< d p >>> = <<< m u l t >>> ( <<< d p >>> , <<< p o w 2 >>> [ k ] ) ;
8 cách } ;
8 cách <<< f o r >>> ( <<< i n t >>> cách c : <<< c o l s >>> ) {
12 cách <<< i f >>> ( c > cur ) cách <<< a p p l y _ g a p >>> ( c - cur ) ;
12 cách <<< M a t >>> cách <<< T c u r >>> = <<< b u i l d >>> ( R , <<< m p >>> [ c ] ) ;
12 cách <<< d p >>> = <<< m u l t >>> ( <<< d p >>> , <<< T c u r >>> ) ;
12 cách cur = c + 1 ;
8 cách }
8 cách <<< i f >>> ( cur < = C ) cách <<< a p p l y _ g a p >>> ( C - cur + 1 ) ;
8 cách <<< f o r >>> ( <<< i n t >>> cách r = 0 ; r < R ; r + + ) {
12 cách <<< i f >>> ( r ) cách <<< c o u t >>> < < ' cách ' ;
12 cách <<< c o u t >>> < < <<< d p >>> [ r ] % <<< M O D >>> ;
8 cách }
8 cách <<< c o u t >>> < < " \ n " ;
4 cách }
4 cách <<< r e t u r n >>> cách 0 ;
}